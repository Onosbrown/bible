buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://dl.google.com/dl/android/maven2/"
        }
    }
}

apply plugin: 'com.android.application'

def getBibleVersion = { ->
    def tag = 'git describe --tags --always'.execute().text.trim()
    if (tag.startsWith('v')) {
        tag = tag.substring(1)
    }
    if ('git diff --no-ext-diff --quiet HEAD'.execute().waitFor() == 0) {
        return tag
    } else {
        return tag + '-dirty'
    }
}

project.ext.supportLibraryVersion = '25.4.0'
project.ext.buildToolsVersion = '26.0.0'
project.ext.minSdkVersion = 14
project.ext.targetSdkVersion = 26
project.ext.versionCode = 86
project.ext.simpleVersionName = getBibleVersion()
project.ext.versionName = project.ext.simpleVersionName

if (rootProject.file('ant.properties').exists()) {
    Properties properties = new Properties()
    properties.load(new FileInputStream(rootProject.file('ant.properties')))
    if (properties['build.codename'] != null) {
        project.ext.versionName = properties['build.codename'] + "(" + getBreventVersion() + ")"
    }
}

android {
    compileSdkVersion rootProject.targetSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        resConfigs "en", "zh-rCN", "zh-rTW"
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        minSdkVersion rootProject.minSdkVersion
        maxSdkVersion rootProject.targetSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        androidTest.setRoot('tests')
    }

    if (new File("ant.properties").exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(file("ant.properties")))

        signingConfigs {
            release {
                storeFile file(properties['key.store'])
                storePassword properties['key.store.password']
                keyAlias properties['key.alias']
                keyPassword properties['key.alias.password']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
            debug {
                signingConfig signingConfigs.release
            }
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                if (variant.buildType.name == 'release') {
                    output.outputFile = rootProject.file("pb-v${rootProject.simpleVersionName}.apk")
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['StickyListHeaders-29f254.jar'])
    compile "com.android.support:support-fragment:${rootProject.supportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${rootProject.supportLibraryVersion}"
    compile "com.android.support:preference-v7:${rootProject.supportLibraryVersion}"
    compile "com.android.support:design:${rootProject.supportLibraryVersion}"
}
